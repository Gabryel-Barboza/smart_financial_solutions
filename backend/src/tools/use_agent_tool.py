from langchain.tools import tool

from src.agents.data_analyst_agent import DataAnalystAgent
from src.agents.data_engineer import DataEngineerAgent

_data_analyst = DataAnalystAgent()
_data_engineer = DataEngineerAgent()


@tool('data_analyst')
def use_data_analyst(user_request: str) -> dict[str, str]:
    """This tool calls the Data Analyst to work on user's requests. The data and insights generated by the agent are returned. The Data Analyst has the following features:
    (create_bar_chart, create_histogram, create_line_plot, create_scatter_plot, detect_outliers_iqr, find_clusters_and_plot, get_correlation_matrix, get_data_summary, create_box_plot, create_correlation_heatmap, get_data_rows, get_metadata, python_ast_repl)
    These are the functions available for data analysis, the python_ast_repl function is powerful for creating insights not available in other functions.
    """

    response = _data_analyst.run(user_request)

    return {'results': response['output']}


@tool('data_engineer')
def use_data_engineer(user_request: str) -> dict[str, str]:
    """"""
    response = _data_engineer.run(user_request)

    return {'results': response['output']}
